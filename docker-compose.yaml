version: '3.8'

services:
  main-postgresql:
    image: 'postgres:14.3-alpine'
    container_name: shop-main-db
    restart: always
    ports:
      - "${POSTGRES_LOCAL_PORT}:${POSTGRES_DOCKER_PORT}"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_TITLE}
  #product-service
  product-service:
    restart: on-failure
    container_name: Product-module
    ports:
      - "${PRODUCT_SERVICE_LOCAL_PORT}:${PRODUCT_SERVICE_DOCKER_PORT}"
    build:
      context: /AdminBLService
      dockerfile: Dockerfile
    depends_on:
      - main-postgresql
    environment:
      SPRING_PROFILES_ACTIVE: prod
  #user-service
  user-service:
    restart: on-failure
    container_name: User-module
    ports:
      - "${USER_SERVICE_LOCAL_PORT}:${USER_SERVICE_DOCKER_PORT}"
    build:
      context: /UserBlService
      dockerfile: Dockerfile
    depends_on:
      - main-postgresql
    environment:
     SPRING_PROFILES_ACTIVE: prod
  #order-service
  order-service:
    restart: on-failure
    container_name: Order-module
    ports:
      - "${ORDER_SERVICE_LOCAL_PORT}:${ORDER_SERVICE_DOCKER_PORT}"
    build:
      context: /OrderBLService
      dockerfile: Dockerfile
    depends_on:
      - main-postgresql
    environment:
     SPRING_PROFILES_ACTIVE: prod
  # main-service
  main-service:
    restart: on-failure
    container_name: main-module
    ports:
      - "${MAIN_SERVICE_LOCAL_PORT}:${MAIN_SERVICE_DOCKER_PORT}"
    build:
      context: /MainModule
      dockerfile: Dockerfile
    environment:
     SPRING_PROFILES_ACTIVE: prod
    depends_on:
      - main-postgresql
      - order-service
      - product-service
      - user-service
